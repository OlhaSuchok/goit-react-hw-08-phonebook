{"version":3,"file":"static/js/634.cd5c5764.chunk.js","mappings":"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","sources":["redux/contacts/Contacts-selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.jsx","components/Loader/Loader.jsx","components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactFormTitle/ContactFormTitle.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (items, filter) => {\n    if (filter.trim() !== '') {\n      return items.filter(item =>\n        item.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n    return items;\n  }\n);\n","import styled from '@emotion/styled';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nexport const ContactFormWrapper = styled.form`\n  position: relative;\n  display: flex;\n  min-width: 400px;\n  justify-content: center;\n  flex-direction: column;\n  align-items: flex-start;\n  background-color: rgba(247, 242, 242, 0.2);\n  border: 2px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  padding: 16px;\n\n  margin-bottom: 10px;\n`;\n\nexport const ContactFormText = styled.div``;\n\nexport const ContactFormFieldFirst = styled.input`\n  width: 340px;\n  height: 35px;\n  border: 2px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  color: ${props => props.theme.colors.mainText};\n  font-size: ${props => props.theme.fontSizes.m};\n  font-weight: ${props => props.theme.fontWeights.text};\n\n  background-color: ${props => props.theme.colors.input};\n\n  margin-bottom: ${props => props.theme.space[4]}px;\n  padding: 6px 10px;\n\n  &:hover {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n    transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:focus {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n    transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  &::placeholder {\n    font-family: cursive;\n    font-size: 18px;\n    color: gray;\n  }\n\n  &[value] {\n    font-family: cursive;\n    font-size: 24px;\n    color: gray;\n  }\n`;\n\nexport const ContactFormFieldSecond = styled.input`\n  width: 340px;\n  height: 35px;\n  border: 2px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  color: ${props => props.theme.colors.mainText};\n  font-size: ${props => props.theme.fontSizes.m};\n  font-weight: ${props => props.theme.fontWeights.text};\n\n  background-color: ${props => props.theme.colors.input};\n  padding: 6px 10px;\n\n  &:hover {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n    transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:focus {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n    transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  &::placeholder {\n    font-family: cursive;\n    font-size: 18px;\n    color: gray;\n  }\n\n  &[value] {\n    font-family: cursive;\n    font-size: 24px;\n    color: gray;\n  }\n`;\n\nexport const ContactFormButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 6px;\n\n  background-color: transparent;\n  border: none;\n`;\n\nexport const AiOutlineUserAddIcons = styled(AiOutlineUserAdd)`\n  color: ${props => props.theme.colors.icons};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconsHover};\n  }\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport React from 'react';\nimport { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { selectContacts } from 'redux/contacts/Contacts-selectors';\nimport { addContact } from 'redux/contacts/Contacts-operations';\nimport { nanoid } from 'nanoid';\nimport {\n  ContactFormWrapper,\n  ContactFormFieldFirst,\n  ContactFormFieldSecond,\n  ContactFormButton,\n  AiOutlineUserAddIcons,\n} from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const items = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const newContact = { name, number, id: nanoid() };\n    const isContact = items.find(item => item.name === newContact.name);\n\n    if (isContact) {\n      toast.warn(`${newContact.name} is already in contacts`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    } else {\n      dispatch(addContact(newContact));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactFormWrapper onSubmit={handleSubmit}>\n      <ContactFormFieldFirst\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Name\"\n      />\n      <ContactFormFieldSecond\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Number\"\n      />\n      <ContactFormButton type=\"submit\">\n        <AiOutlineUserAddIcons size={34} />\n      </ContactFormButton>\n      <ToastContainer autoClose={5000} style={{ fontSize: '20px' }} />\n    </ContactFormWrapper>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FindText = styled.label`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  padding-bottom: ${props => props.theme.space[3]}px;\n  padding-top: 0;\n  color: ${props => props.theme.colors.mainText};\n  font-size: ${props => props.theme.fontSizes.m};\n  font-weight: ${props => props.theme.fontWeights.text};\n`;\n\nexport const FindValue = styled.input`\n  margin-right: auto;\n  margin-left: auto;\n\n  width: 410px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.mainText};\n  font-size: ${props => props.theme.fontSizes.m};\n  font-weight: ${props => props.theme.fontWeights.text};\n\n  background-color: ${props => props.theme.colors.input};\n\n  height: 35px;\n  border: 2px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  padding: 6px 10px;\n\n  &:hover {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n    transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:focus {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n    transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  &::placeholder {\n    font-family: cursive;\n    font-size: 18px;\n    color: gray;\n  }\n\n  &[value] {\n    font-family: cursive;\n    font-size: 24px;\n    color: gray;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContactsAction } from 'redux/filters/filterSlice';\nimport { selectContactsFilter } from 'redux/contacts/Contacts-selectors';\nimport React from 'react';\nimport { FindValue } from './ContactFilter.styled';\n\nexport function ContactFilter() {\n  const contactsFilter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FindValue\n      type=\"text\"\n      value={contactsFilter}\n      onChange={event => dispatch(filterContactsAction(event.target.value))}\n      placeholder=\"Find contacts by name\"\n    ></FindValue>\n  );\n}\n","import { Oval } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <Oval\n      width={50}\n      color=\"#0059ff\"\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"#4fa94d\"\n      strokeWidth={2}\n      strokeWidthSecondary={2}\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '30px',\n      }}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ErrorMessageText = styled.p`\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 0;\n  font-family: emoji;\n  color: #696969;\n  font-size: 28px;\n  font-weight: 600;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectError } from 'redux/contacts/Contacts-selectors';\nimport { ErrorMessageText } from './ErrorMessage.styled';\n\nexport function ErrorMessage() {\n  const error = useSelector(selectError);\n  return <ErrorMessageText>{error}</ErrorMessageText>;\n}\n","import styled from '@emotion/styled';\nimport { MdDeleteOutline } from 'react-icons/md';\n\nexport const ContactsList = styled.ul`\n  margin-top: 0;\n  margin-bottom: 0;\n  background-color: rgba(247, 242, 242, 0.4);\n  border: 2px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  padding: 16px;\n  list-style: none;\n  width: 400px;\n  height: 350px;\n  overflow: auto;\n`;\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  color: ${props => props.theme.colors.mainText};\n  font-size: ${props => props.theme.fontSizes.s};\n  font-weight: ${props => props.theme.fontWeights.text};\n\n  &:not(:last-child) {\n    margin-bottom: ${props => props.theme.space[4]}px;\n  }\n`;\n\nexport const ContactListButtonDelete = styled.button`\n  background-color: transparent;\n  border: none;\n`;\n\nexport const ContactListTextWrapper = styled.div`\n  background-color: rgba(247, 242, 242, 0.6);\n  border: 2px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  width: 302px;\n  padding: 6px 10px;\n`;\n\nexport const ContactListItemName = styled.p`\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\nexport const ContactListItemPhone = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const MdDeleteOutlineIcons = styled(MdDeleteOutline)`\n  color: ${props => props.theme.colors.icons};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconsHover};\n  }\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'components/Loader/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { deleteContact } from 'redux/contacts/Contacts-operations';\nimport { fetchContacts } from 'redux/contacts/Contacts-operations';\nimport {\n  selectVisibleContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/Contacts-selectors';\n\nimport {\n  ContactListItem,\n  ContactsList,\n  ContactListButtonDelete,\n  ContactListTextWrapper,\n  ContactListItemName,\n  ContactListItemPhone,\n  MdDeleteOutlineIcons,\n} from './ContactList.styled';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const isloading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsList>\n      {error && <ErrorMessage />}\n      {visibleContacts.map(item => (\n        <ContactListItem key={item.id}>\n          <ContactListTextWrapper>\n            <ContactListItemName>{item.name}</ContactListItemName>\n            <ContactListItemPhone>{item.number}</ContactListItemPhone>\n          </ContactListTextWrapper>\n          <ContactListButtonDelete\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(item.id))}\n          >\n            <MdDeleteOutlineIcons size={34} />\n          </ContactListButtonDelete>\n        </ContactListItem>\n      ))}\n      {isloading && !error && <Loader />}\n    </ContactsList>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ContactFormTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 10px;\n\n  margin-top: 0;\n  color: #f0ffff;\n  font-size: 50px;\n  font-weight: 700;\n  font-family: monospace;\n  text-shadow: #f0ffff;\n  letter-spacing: 4px;\n\n  color: transparent;\n  background-clip: text;\n  background-image: linear-gradient(\n    90deg,\n    rgba(2, 0, 36, 1) 0%,\n    rgba(9, 9, 121, 1) 8%,\n    rgba(0, 212, 255, 1) 100%\n  );\n`;\n\nexport const ContactFormSecondTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n  margin-top: 0;\n  color: transparent;\n  background-clip: text;\n  background-image: linear-gradient(\n    90deg,\n    rgba(2, 0, 36, 1) 0%,\n    rgba(9, 9, 121, 1) 8%,\n    rgba(0, 212, 255, 1) 100%\n  );\n  font-size: 24px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box } from 'components/Box/Box';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport {\n  ContactFormTitle,\n  ContactFormSecondTitle,\n} from 'components/ContactFormTitle/ContactFormTitle';\nimport { fetchContacts } from 'redux/contacts/Contacts-operations';\nimport { selectContacts } from 'redux/contacts/Contacts-selectors';\n\nexport default function Contacts() {\n  const items = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n      }}\n    >\n      <Box\n        height={720}\n        p={20}\n        bg=\"rgba(247, 242, 242, 0.3)\"\n        border=\"2px solid\"\n        borderColor=\"border\"\n        borderRadius={8}\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <ContactFormTitle>PHONEBOOK</ContactFormTitle>\n        <ContactForm />\n        <ContactFilter />\n        <ContactFormSecondTitle>CONTACTS</ContactFormSecondTitle>\n        {items && <ContactList />}\n      </Box>\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filter","selectVisibleContacts","createSelector","trim","item","name","toLowerCase","includes","ContactFormWrapper","styled","props","theme","colors","border","ContactFormFieldFirst","mainText","fontSizes","m","fontWeights","text","input","space","ContactFormFieldSecond","ContactFormButton","AiOutlineUserAddIcons","AiOutlineUserAdd","icons","iconsHover","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","handleChange","event","target","value","onSubmit","preventDefault","form","newContact","elements","id","nanoid","find","toast","position","addContact","type","onChange","pattern","title","required","placeholder","size","autoClose","style","fontSize","FindValue","ContactFilter","contactsFilter","filterContactsAction","Loader","width","color","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","wrapperStyle","display","justifyContent","marginTop","ErrorMessageText","ErrorMessage","ContactsList","ContactListItem","s","ContactListButtonDelete","ContactListTextWrapper","ContactListItemName","ContactListItemPhone","MdDeleteOutlineIcons","MdDeleteOutline","ContactList","isloading","visibleContacts","useEffect","fetchContacts","map","onClick","deleteContact","ContactFormTitle","ContactFormSecondTitle","Contacts","height","alignItems","Box","p","bg","borderColor","borderRadius","flexDirection"],"sourceRoot":""}